import UIKit


//Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать чай (можно представить её в виде массива видов чая, которые хотят заказать). Необходимо последовательно выводить в консоль сколько заплатит покупатель (необходимо вывести его номер по порядку, чай, который он заказал и стоимость).

var a: [String: Int] = ["green": 100, "black": 200, "frut": 300]
var m: [String] = ["green", "black", "green", "frut", "black", "black", "frut"]
func ff(a: [String: Int], m: [String]){
    for (key, value) in a{
        var summmm = 0
        var i = 0
        while i < m.count{
            if m[i] == key{
                print(value)
            }
        i += 1
        }
    }
    m.enumerated().forEach({print("\($0 + 1) номер в очереди заказал \($1) чай")})

    
}
ff(a: a, m: m)



//Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. Необходимо создать новый массив, который будет состоять из элементов старого, но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию.

var b = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
var c = b.filter{$0 != nil && $0 != 0 && $0 != 4 }.sorted{$1! > $0!}
print(c)

//Написать функцию, которая на вход принимает целое число, а возвращает массив, который сформирован по следующим правилам: количество элементов соответствует переданному числу, массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза.
var bb: [Int] = [1]

func getDigit(aa: Int) -> [Int]{
    var xx = 1
    while bb.count < aa{
        bb.append(bb.last! * 2)
    }
    return bb
}
print(getDigit(aa: 5))
