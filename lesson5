//В рамках прошлого домашнего задания был создан класс пиццерии с переменной, в которой хранится пицца, удалите её. Необходимо создать структуру картошки фри, в которой будет стоимость и размер картошки и сделать так, чтобы в классе пиццерии была одна переменная, в которую можно было бы класть и пиццу, и картошку фри.
//
//Добавьте в класс пиццерии функцию, которая будет добавлять новую позицию в меню.
//
//Создайте протокол, в котором будут содержаться функции открытия и закрытия.
//
//Написать расширение для класса пиццерии, в котором будет реализован протокол из пункта 3.
//
//Написать функцию, в которой происходит вычитание одного числа из другого. Функция должна работать и с Int, и с Double.Функция должна возвращать результат вычитания.


//1.

protocol MenuProtocol {
    var name: String {get}
    var cost: Double {get}
}
struct Pizza: MenuProtocol {
    
    enum PizzaType{
        case diablo
        case margarta
        case pepperoni
        case meat
    }
    var cost: Double
    var type: PizzaType
    var thickness: Bool
    var add: [Ingridients]
    var name: String
}
struct Potato: MenuProtocol{
    var cost: Double
    var size: PotSize
    var name: String
}
enum PotSize{
    case s
    case m
    case l
}
enum Ingridients{
    case tomato
    case cheeze
    case meat
}
class Pizzeria{
    var menu: [MenuProtocol]

    init(menu: [MenuProtocol]){
        self.menu = menu
    }

    func addPizza(_ pizza: Pizza){
        menu.append(pizza)
    }

    func getPizza() -> [MenuProtocol]{
        menu
    }
    //2.
    func addNew(_ new: MenuProtocol){
        menu.append(new)
    }
}

//3.
protocol NewProtocol {
    func open()
    func close()
}

//4.
extension Pizzeria: NewProtocol{
    func open() {
        print("Open")
    }
    func close() {
        print("Close")
    }
}

//5.
func math<T: Numeric>(a: T, b: T) -> T{
     a - b
}
